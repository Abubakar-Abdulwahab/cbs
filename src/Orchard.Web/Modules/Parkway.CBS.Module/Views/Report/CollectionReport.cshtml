@using Parkway.CBS.Core.Models.Enums;
@model Parkway.CBS.Core.HelperModels.CollectionReportViewModel

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{
    Script.Require("CBS.MDA.Excel_Export.Script");

    Layout.Title = T("Collection Report").ToString();

    Style.Require("CBS.MDA.Style.BootStrap");
    Style.Require("Style.Datepicker");
    Style.Require("CBS.MDA.Style.Assesment");
    Style.Require("CBS.Report.Reset.Pagination");

    Script.Require("CBS.MDA.BootstrapDatepicker.Script");
    Script.Require("CBS.MDA.Bootstrap.Script");
    Script.Require("CBS.MDA.BillingDatepicker.Script");
    Script.Require("CBS.MDA.AssessmentDatePicker.Script");

    Script.Require("CBS.MDA.PDF.Script");
    Script.Require("CBS.MDA.PDF_autoTable.Script");
    Script.Require("CBS.MDA.RevenueReport.Script");

    Script.Require("CBS.MDA.Excel_Export.Script");
    Script.Require("CBS.Report.Script").AtFoot();

}
<style>
    .textloader {
        position: absolute;
        left: 43%;
        top: 34%;
        color: #337ab7;
        display: none;
    }
</style>
<div class="zone zone-messages">
    <div class="message message-Error" id="errorFlash" style="display:none"></div>
</div>
@using (Html.BeginFormAntiForgeryPost())
{

    @Html.HiddenFor(model => model.SelectedMDA)
    @Html.HiddenFor(model => model.SelectedRevenueHead)
    @Html.HiddenFor(model => model.Token)

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">From</b>
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar" aria-hidden="true"></i>
                        </div>
                        <input type="text" placeholder="click to show datepicker" class="form-control pickyDate" value="@Model.FromRange" name="fromRange" />
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">To</b>
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar" aria-hidden="true"></i>
                        </div>
                        <input type="text" placeholder="click to show datepicker" class="form-control pickyDate" value="@Model.EndRange" name="endRange" />
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Select MDA</b>
                    <select name="mda" id="mda_selected" required class="form-control selectBox">
                        <option value="" disabled>Select an MDA</option>
                        <option value="0" @(Model.SelectedMDA == "0" ? "selected" : "")>All</option>
                        @foreach (var item in Model.Mdas)
                        {
                            <option value="@item.Id" @(Model.SelectedMDA == item.Id.ToString() ? "selected" : "")>@item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Select Revenue Head</b>
                    <span name="textloader" id="textloader" class="textloader">Loading..</span>
                    <select name="revenueHeadId" id="revenuehead_selected" class="form-control selectBox">
                        <option value="" disabled>Select a Revenue Head</option>
                        <option value="0" @(Model.SelectedRevenueHead == "0" ? "selected" : "")>All Revenue Heads</option>
                        @foreach (var item in Model.RevenueHeads)
                        {
                            <option value="@item.Id" @(Model.SelectedRevenueHead == item.Id.ToString() ? "selected" : "")>@item.Name</option>
                        }
                    </select>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <div class="input-group">
                        <b style="color:#e97d68;">Search by Payment Reference</b>
                        @Html.TextBox("PaymentRef", Model.PaymentRef, new { @class = "form-control", @placeholder = "Enter Payment Reference", @name = "paymentRef" })
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <div class="input-group">
                        <b style="color:#e97d68;">Search by Invoice Number  </b>
                        @Html.TextBox("InvoiceNumber", Model.InvoiceNumber, new { @class = "form-control", @placeholder = "Enter Invoice Number ", @name = "invoiceNumber" })
                    </div>
                </div>
            </div>


            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Search by Payment Provider</b>
                    <select name="SelectedPaymentProvider" id="paymentProvider_selected" class="form-control selectBox">
                        <option value="" disabled>Select a Payment Provider</option>
                        <option value="0" @(Model.SelectedPaymentProvider == "0" ? "selected" : "")>All</option>
                        @foreach (var item in Model.PaymentProviders)
                        {
                            <option value="@item.Id" @(Model.SelectedPaymentProvider == item.Id.ToString() ? "selected" : "")>@item.Name</option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Search by Payment Channel</b>

                    @Html.DropDownListFor(model => model.SelectedPaymentChannel, Enum.GetValues(typeof(Parkway.CBS.Core.Models.Enums.PaymentChannel)).Cast<Parkway.CBS.Core.Models.Enums.PaymentChannel>()
                        .ToList().Select(t => new SelectListItem() { Text = t.ToDescription(), Value = t.ToString() }),

                        new { @class = "form-control", @name = "SelectedPaymentChannel" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <div class="input-group">
                        <b style="color:#e97d68;">Search by Receipt Number  </b>
                        @Html.TextBox("ReceiptNumber", Model.ReceiptNumber, new { @class = "form-control", @placeholder = "Enter Receipt Number ", @name = "receiptNumber" })
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Search by Bank</b>
                    <select name="SelectedBank" id="bankCode_selected" class="form-control selectBox">
                        <option value="" disabled>Select a Bank</option>
                        <option value="0" @(Model.SelectedBank == "0" ? "selected" : "")>All Banks</option>
                        @foreach (var item in Model.Banks)
                        {
                            <option value="@item.Code" @(Model.SelectedBank == item.Code ? "selected" : "")>@item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <b style="color:#e97d68;">Search by Date</b>
                    <select id="filterResults" name="PaymentDirection" class="form-control selectBox">
                        @Html.SelectOption(Model.PaymentDirection, Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.PaymentDate, T(Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.PaymentDate.ToDescription()).ToString())
                        @Html.SelectOption(Model.PaymentDirection, Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.TransactionDate, T(Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.TransactionDate.ToDescription()).ToString())
                        @Html.SelectOption(Model.PaymentDirection, Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.CreatedAtUtc, T(Parkway.CBS.Core.Models.Enums.CollectionPaymentDirection.CreatedAtUtc.ToDescription()).ToString())
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class="input-group">
                        <button class="btn btn-primary" style="margin: 20px 10px 0 0;" formaction="@Url.Action("CollectionReport", "Report" )">Search</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 reportsummary">
            <button class="btn btn-success" style="margin: 20px 10px 0 0;" title="Export to excel" formaction="@Url.Action("CollectionReportDownload", "FileExport", new { format = Parkway.CBS.Core.Models.Enums.ExportFormat.Excel })">
                <i class=" fa fa-file-excel-o"></i>
                <span>EXCEL</span>
            </button>
            <button class="btn btn-danger" style="margin: 20px 10px 0 0;" title="Export to PDF" formaction="@Url.Action("CollectionReportDownload", "FileExport", new { format = Parkway.CBS.Core.Models.Enums.ExportFormat.PDF })">
                <i class=" pdf fa fa-file-pdf-o"></i>
                <span>PDF</span>
            </button>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    Payment Date
                                </th>
                                <th>
                                    Receipt Number
                                </th>
                                <th>
                                    Payer Name
                                </th>
                                <th>
                                    Payer TIN
                                </th>
                                <th>
                                    Revenue Head
                                </th>
                                <th>
                                    Payment Reference
                                </th>
                                <th>
                                    Payment Method
                                </th>
                                <th>
                                    Invoice Number
                                </th>
                                <th>
                                    Bank Name
                                </th>
                                <th style="text-align:right">
                                    Total Amount
                                </th>
                            </tr>
                        </thead>
                        <tbody style="background-color:#EEEEEE;">

                            @if (Model.ReportRecords != null && Model.ReportRecords.Any())
                            {
                                foreach (var item in Model.ReportRecords)
                                {
                                    <tr>
                                        <td>
                                            @item.PaymentDate.ToString("dd MMM yyyy")
                                        </td>
                                        <td>
                                            <a href="@Url.RouteUrl("AdminViewReceipt",new { receiptNumber = @item.ReceiptNumber})" name="viewReceipt">@item.ReceiptNumber</a>
                                        </td>
                                        <td>
                                            @item.TaxPayerName
                                        </td>
                                        <td>
                                            @item.TaxPayerTIN
                                        </td>
                                        <td>
                                            @item.RevenueHeadName
                                        </td>
                                        <td>
                                            @item.PaymentRef
                                        </td>
                                        <td>
                                            @item.PaymentProvider
                                        </td>
                                        <td>
                                            <a href="@Url.RouteUrl("AdminViewInvoice",new { invoiceNumber = @item.InvoiceNumber })" name="viewInvoice">@item.InvoiceNumber</a>
                                        </td>
                                        <td>
                                            @item.Bank
                                        </td>
                                        <td style="text-align:right">
                                            @String.Format("{0:n2}", item.Amount)
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="10">No Records Found</td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <p class="summary">Total Number of Payments: @Model.TotalNumberOfPayment </p>
                <p class="summary">Total Amount Paid: &#X20A6; @String.Format("{0:n2}", Model.TotalAmountPaid)</p>
            </div>
        </div>
    </div>

}
@Display(Model.Pager)


