@model Parkway.CBS.Core.HelperModels.RedirectToWebPayModel

@{
    Layout.Title = "Web Payment";

    //Script.Require("CBS.Qquery331").AtHead();
    Script.Require("CBS.Popper.Script").AtFoot();
    Script.Require("CBS.Bootstrap4.Script").AtFoot();
    Script.Require("CBS.Main.Script").AtFoot();

    //Style.Include(Html.ThemePath(WorkContext.CurrentTheme, "/Styles/themebootstrap.min.css"));
    Style.Require("CBS.Bootstrap");
    Style.Require("CBS.Style.Main");
    //Style.Include(Html.ThemePath(WorkContext.CurrentTheme, "/Styles/theme.css"));
}

@Html.Partial("\\PagePartials\\HeaderPartial", Model.HeaderObj)
<div class="wrapper">
    <div class="top-banner alt">
        <div class="banner-bottom" style="background-image:@("url(" + Url.Content(Html.ThemePath(WorkContext.CurrentTheme, "/Styles/images/banner-top.png")) + ")")">
            <h3>Web Payment</h3>
        </div>
    </div>
    <div class="container breadcrumbs">
        <nav aria-label="breadcrumb">
            <br />
            <br />
        </nav>
    </div>

    <div class="content">
        <div class="container form-container">
            @Model.Message
        </div>
    </div>

    <div class="footer-top" style="background-image:@("url(" + Url.Content(Html.ThemePath(WorkContext.CurrentTheme, "/Styles/images/footer-bg.png")) + ")")">

    </div>
    @Html.Partial("\\PagePartials\\FooterPartial")
</div>
<script>
    var token = @Html.Raw(Json.Encode(Model.Token));
    var requestToken = document.getElementsByName("__RequestVerificationToken")[0].defaultValue;
    var formElement = document.getElementById("requestPaymentForm");
    var progressDots = document.getElementById("progressDots");
    var httpRequest;
    if (token.length > 0) {
        showProgress();
        requestPayment();
    }


    function showProgress() {
        var counter = -5;
        setInterval(showProgressDots, 500);

        function showProgressDots() {
            if (counter >= 0) {
                progressDots.innerHTML = ""; counter = -5;
            } else {
                progressDots.innerHTML += "."; counter++;
            }
        }
    }


    //https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX/Getting_Started
    function requestPayment() {

        if (window.XMLHttpRequest) { // Mozilla, Safari, IE7+ ...
            httpRequest = new XMLHttpRequest();
        } else if (window.ActiveXObject) { // IE 6 and older
            httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
        }
        httpRequest.onreadystatechange = alertContents;
        httpRequest.open('POST', "request-pay-direct-web", true);
        console.log("created post");
        httpRequest.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        console.log("created content type");
        httpRequest.send('token=' + encodeURIComponent(token) + '&__RequestVerificationToken=' + encodeURIComponent(requestToken));
    };

    function alertContents() {
        if (httpRequest.readyState === XMLHttpRequest.DONE) {
            if (httpRequest.status === 200) {
                var model = JSON.parse(httpRequest.responseText);
                if (!model.Error) {
                    formElement.innerHTML = model.ResponseObject.InnerForm;
                    formElement.action = model.ResponseObject.PostURL;
                    console.log(formElement.innerHTML);
                    //formElement.submit();
                } else {
                    alert(model.ResponseObject);
                }
            } else {
                alert('There was a problem with the request.');
            }
        }
    }
</script>