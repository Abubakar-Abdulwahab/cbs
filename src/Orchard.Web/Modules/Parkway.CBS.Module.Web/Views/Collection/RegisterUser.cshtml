@model Parkway.CBS.Core.HelperModels.RegisterCBSUserObj

@{
    Layout.Title = "Register";
    Script.Require("CBS.Popper.Script").AtFoot();
    Script.Require("CBS.Bootstrap4.Script").AtFoot();
    Script.Require("CBS.Main.Script").AtFoot();
    Script.Require("CBS.State.LGA.Script").AtFoot();
    Style.Require("CBS.Bootstrap");
    Style.Require("CBS.Style.Main");
    Style.Require("CBS.Style.Pages");
}
<script>
    var states = @Html.Raw(Json.Encode(Model.StateLGAs));
    var stateLGAMap = new Map(states.map(obj => [obj.Id, obj.LGAs]));
</script>
@Html.Partial("Partials\\HeaderPartial", Model.HeaderObj)

<div class="wrapper-payment">
    <div class="top-banner alt">
        <div class="banner-bottom">
            <h3>Register</h3>
        </div>
    </div>
    <div class="container breadcrumbs">
        <nav aria-label="breadcrumb">
            <br />
            <br />
        </nav>
    </div>
    @Html.Partial("Partials\\FlashPartial", Model.ErrorMessage)
    <div class="content-payment">
        <div class="container form-container">
            @using (Html.BeginFormAntiForgeryPost(Url.AppendModulePrefixToRouteName("CBS.User.Register"), FormMethod.Post, new { @class = "main-form payment-form" }))
            {
                @Html.AntiForgeryToken()
                <h3 class="form-title">Kindly fill the following details to register</h3>
                <label for="" class="title">Who are you?</label>
                if (Model.TaxCategories != null && Model.TaxCategories.Any())
                {
                    foreach (var cat in Model.TaxCategories)
                    {
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="TaxPayerType" id="@cat.Id" value="@cat.Id" required @(Model.TaxPayerType == cat.Id.ToString() ? "checked" : "")>
                            <label class="form-check-label" for="@cat.Id">@cat.Name</label>
                        </div>
                    }
                }
                else
                {
                    <small>No Tax Category Found</small>
                }
                <div class="row">
                    <div class="col-md-12">
                        <label for="" class="title">Full Name<small style="color:red; font-size:larger">*</small></label>
                        @Html.TextBoxFor(m => m.RegisterCBSUserModel.Name, new { @class = "form-control mb-4", @type = "text", @placeholder = "Enter full name here", @maxlength = "255", @min = "5", @required = true })
                        @*<input type="text" name="TaxEntityViewModel.Recipient" class="form-control mb-4" placeholder="Enter full name here" value="@Model.RegisterCBSUserModel.UserName" required>*@
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.Name, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Username<small style="color:red; font-size:larger">*</small></label>
                        @Html.TextBoxFor(m => m.RegisterCBSUserModel.UserName, new { @class = "form-control mb-4", @type = "text", @placeholder = "Enter username here", @maxlength = "20", @min = "5", @required = true })
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.UserName, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Phone Number<small style="color:red; font-size:larger">*</small></label>
                        @Html.TextBoxFor(m => m.RegisterCBSUserModel.PhoneNumber, new { @class = "form-control mb-4", @type = "text", @placeholder = "Enter phone number here", @maxlength = "14", @min = "6" })
                        @*<input type="email" name="TaxEntityViewModel.Email" class="form-control mb-4" placeholder="Enter phone number here" value="@Model.RegisterCBSUserModel.UserName" required>*@
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.PhoneNumber, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Email</label>
                        @Html.TextBoxFor(m => m.RegisterCBSUserModel.Email, new { @class = "form-control mb-4", @type = "email", @placeholder = "Enter email here", @maxlength = "100", @min = "3" })
                        @*<input type="text" name="TaxEntityViewModel.PhoneNumber" class="form-control mb-4" placeholder="Enter email here" value="@Model.RegisterCBSUserModel.UserName" required>*@
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.Email, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">TIN</label>
                        @Html.TextBoxFor(m => m.RegisterCBSUserModel.TIN, new { @class = "form-control mb-4", @type = "text", @placeholder = "Enter TIN here", @maxlength = "100", @min = "5" })
                        @*<input type="text" name="TaxEntityViewModel.TaxPayerIdentificationNumber" class="form-control mb-4" placeholder="Enter TIN here" value="@Model.RegisterCBSUserModel.UserName">*@
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.TIN, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6 mb-4">
                        <label for="state" class="title">State<span class="required-sym">*</span></label>
                        <select class="custom-select" name="RegisterCBSUserModel.SelectedState" id="state" @(Model.HeaderObj.IsLoggedIn ? "disabled" : "required")>
                            <option selected disabled value="">Select a State</option>
                            @foreach (var item in Model.StateLGAs)
                            {
                                <option value="@item.Id" @(Model.RegisterCBSUserModel.SelectedState == item.Id ? "selected" : "")>@item.Name</option>
                            }
                        </select>
                        @Html.ValidationMessage("RegisterCBSUserModel.SelectedState", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6 mb-4">
                        <label for="lga" class="title">Local Government Area<span class="required-sym">*</span></label>
                        <select class="custom-select" name="RegisterCBSUserModel.SelectedStateLGA" id="lga" @(Model.HeaderObj.IsLoggedIn ? "disabled" : "required")>
                            <option selected disabled value="">Select an LGA</option>
                            @if (Model.ListLGAs != null && Model.ListLGAs.Any())
                            {
                                foreach (var item in Model.ListLGAs)
                                {
                                    <option value="@item.Id" @(Model.RegisterCBSUserModel.SelectedStateLGA == item.Id ? "selected" : "")>@item.Name</option>
                                }
                            }
                        </select>
                        @Html.ValidationMessage("RegisterCBSUserModel.SelectedStateLGA", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Password<small style="color:red; font-size:larger">*</small></label>
                        <input name="RegisterCBSUserModel.Password" required value="" min="5" class="form-control mb-4" type="password" placeholder="Enter password here" maxlength="255" />
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.Password, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Confirm Password<small style="color:red; font-size:larger">*</small></label>
                        <input name="RegisterCBSUserModel.ConfirmPassword" required value="" class="form-control mb-4" type="password" placeholder="Re-enter password here" maxlength="255" min="5" />
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.ConfirmPassword, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="col-md-12  mb-4">
                        <label for="" class="title">Address<small style="color:red; font-size:larger">*</small></label>
                        @Html.TextAreaFor(m => m.RegisterCBSUserModel.Address, new { @class = "form-control mb-4", @type = "text", @placeholder = "Enter address here", @maxlength = "200", @min = "5", @required = true })
                        @*<textarea class="form-control" name="TaxEntityViewModel.Address" placeholder="Enter address here">@Model.RegisterCBSUserModel.UserName</textarea>*@
                        @Html.ValidationMessageFor(m => m.RegisterCBSUserModel.Address, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <button type="submit" class="btn">Register</button>
                </div>
            }
        </div>
    </div>
    <div class="footer-top">

    </div>
    @Html.Partial("Partials\\FooterPartial")
</div>
