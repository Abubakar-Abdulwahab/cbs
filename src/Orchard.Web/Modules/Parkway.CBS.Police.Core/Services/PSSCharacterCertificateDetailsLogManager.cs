using System;
using Orchard;
using Orchard.Data;
using Orchard.Users.Models;
using Parkway.CBS.Core.Services;
using Parkway.CBS.Police.Core.Models;
using Parkway.CBS.Police.Core.Services.Contracts;

namespace Parkway.CBS.Police.Core.Services
{
    public class PSSCharacterCertificateDetailsLogManager : BaseManager<PSSCharacterCertificateDetailsLog>, IPSSCharacterCertificateDetailsLogManager<PSSCharacterCertificateDetailsLog>
    {
        private readonly IRepository<PSSCharacterCertificateDetailsLog> _repository;
        private readonly IRepository<UserPartRecord> _user;
        private readonly IOrchardServices _orchardServices;
        private readonly ITransactionManager _transactionManager;


        public PSSCharacterCertificateDetailsLogManager(IRepository<PSSCharacterCertificateDetailsLog> repository, IRepository<UserPartRecord> user, IOrchardServices orchardServices) : base(repository, user, orchardServices)
        {
            _repository = repository;
            _orchardServices = orchardServices;
            _transactionManager = _orchardServices.TransactionManager;
            _user = user;
        }

        /// <summary>
        /// Log new blob entry
        /// </summary>
        /// <param name="characterCertificateDetailsId"></param>
        public string LogNewEntryQueryStringValue(long characterCertificateDetailsId)
        {
            try
            {
                var queryString = $"Merge Parkway_CBS_Police_Core_{nameof(PSSCharacterCertificateDetailsLog)} deetsLog " +
                    $"USING (SELECT innerDeets.{nameof(PSSCharacterCertificateDetails.Id)}, innerDeets.{nameof(PSSCharacterCertificateDetails.Request)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.Reason)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.ReasonValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.Tribe)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.TribeValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.PlaceOfBirth)}, innerDeets.{nameof(PSSCharacterCertificateDetails.DateOfBirth)}, innerDeets.{nameof(PSSCharacterCertificateDetails.PreviouslyConvicted)}, innerDeets.{nameof(PSSCharacterCertificateDetails.PreviousConvictionHistory)}, innerDeets.{nameof(PSSCharacterCertificateDetails.PassportNumber)}, innerDeets.{nameof(PSSCharacterCertificateDetails.PlaceOfIssuance)}, innerDeets.{nameof(PSSCharacterCertificateDetails.DateOfIssuance)}, innerDeets.{nameof(PSSCharacterCertificateDetails.RefNumber)}, innerDeets.{nameof(PSSCharacterCertificateDetails.IsBiometricEnrolled)}, innerDeets.{nameof(PSSCharacterCertificateDetails.IsApplicantInvitedForCapture)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CaptureInvitationDate)}, innerDeets.{nameof(PSSCharacterCertificateDetails.RequestType)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.StateOfOrigin)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.StateOfOriginValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.BiometricCaptureDueDate)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CPCCRServiceNumber)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CPCCRName)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CPCCRAddedBy)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.DestinationCountry)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.DestinationCountryValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CPCCRRankName)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CPCCRRankCode)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CountryOfOrigin)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.CountryOfOriginValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CountryOfPassport)}_Id, innerDeets.{nameof(PSSCharacterCertificateDetails.CountryOfPassportValue)}, innerDeets.{nameof(PSSCharacterCertificateDetails.CreatedAtUtc)}, innerDeets.{nameof(PSSCharacterCertificateDetails.UpdatedAtUtc)}," +
                    $" innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.Id)} AS {nameof(PSSCharacterCertificateDetailsBlobLog.PSSCharacterCertificateDetailsBlob)}_Id, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographBlob)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageBlob)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureBlob)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographOriginalFileName)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageOriginalFileName)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureOriginalFileName)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographFilePath)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageFilePath)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureFilePath)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographContentType)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageContentType)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureContentType)}, innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.CreatedAtUtc)} AS {nameof(PSSCharacterCertificateDetailsBlobBase)}_CreatedAt , innerBlob.{nameof(PSSCharacterCertificateDetailsBlobBase.UpdatedAtUtc)} AS {nameof(PSSCharacterCertificateDetailsBlobBase)}_UpdatedAt" +
                    $" FROM Parkway_CBS_Police_Core_{nameof(PSSCharacterCertificateDetails)} innerDeets INNER JOIN Parkway_CBS_Police_Core_{nameof(PSSCharacterCertificateDetailsBlob)} innerBlob ON innerDeets.{nameof(PSSCharacterCertificateDetails.Id)} = innerBlob.{nameof(PSSCharacterCertificateDetailsBlob.PSSCharacterCertificateDetails)}_Id WHERE innerDeets.{nameof(PSSCharacterCertificateDetails.Id)} = :characterCertificateDetailsId ) deets" +
                    $" ON (deets.{nameof(PSSCharacterCertificateDetails.Id)} = 0) WHEN NOT MATCHED BY TARGET AND deets.{nameof(PSSCharacterCertificateDetails.Id)} = :characterCertificateDetailsId THEN" +
                    $" INSERT " +
                    $" ({nameof(PSSCharacterCertificateDetailsLog.PSSCharacterCertificateDetails)}_Id, {nameof(PSSCharacterCertificateDetailsLog.Request)}_Id, {nameof(PSSCharacterCertificateDetailsLog.Reason)}_Id, {nameof(PSSCharacterCertificateDetailsLog.ReasonValue)}, {nameof(PSSCharacterCertificateDetailsLog.Tribe)}_Id, {nameof(PSSCharacterCertificateDetailsLog.TribeValue)}, {nameof(PSSCharacterCertificateDetailsLog.PlaceOfBirth)}, {nameof(PSSCharacterCertificateDetailsLog.DateOfBirth)}, {nameof(PSSCharacterCertificateDetailsLog.PreviouslyConvicted)}, {nameof(PSSCharacterCertificateDetailsLog.PreviousConvictionHistory)}, {nameof(PSSCharacterCertificateDetailsLog.PassportNumber)}, {nameof(PSSCharacterCertificateDetailsLog.PlaceOfIssuance)}, {nameof(PSSCharacterCertificateDetailsLog.DateOfIssuance)}, {nameof(PSSCharacterCertificateDetailsLog.RefNumber)}, {nameof(PSSCharacterCertificateDetailsLog.IsBiometricEnrolled)}, {nameof(PSSCharacterCertificateDetailsLog.IsApplicantInvitedForCapture)}, {nameof(PSSCharacterCertificateDetailsLog.CaptureInvitationDate)}, {nameof(PSSCharacterCertificateDetailsLog.RequestType)}_Id, {nameof(PSSCharacterCertificateDetailsLog.StateOfOrigin)}_Id, {nameof(PSSCharacterCertificateDetailsLog.StateOfOriginValue)}, {nameof(PSSCharacterCertificateDetailsLog.BiometricCaptureDueDate)}, {nameof(PSSCharacterCertificateDetailsLog.CPCCRServiceNumber)}, {nameof(PSSCharacterCertificateDetailsLog.CPCCRName)}, {nameof(PSSCharacterCertificateDetailsLog.CPCCRAddedBy)}_Id, {nameof(PSSCharacterCertificateDetailsLog.DestinationCountry)}_Id, {nameof(PSSCharacterCertificateDetailsLog.DestinationCountryValue)}, {nameof(PSSCharacterCertificateDetailsLog.CPCCRRankName)}, {nameof(PSSCharacterCertificateDetailsLog.CPCCRRankCode)}, {nameof(PSSCharacterCertificateDetailsLog.CountryOfOrigin)}_Id, {nameof(PSSCharacterCertificateDetailsLog.CountryOfOriginValue)}, {nameof(PSSCharacterCertificateDetailsLog.CountryOfPassport)}_Id, {nameof(PSSCharacterCertificateDetailsLog.CountryOfPassportValue)}, {nameof(PSSCharacterCertificateDetailsLog.CreatedAtUtc)}, {nameof(PSSCharacterCertificateDetailsLog.UpdatedAtUtc)}) " +
                                $"VALUES (deets.{nameof(PSSCharacterCertificateDetails.Id)}, deets.{nameof(PSSCharacterCertificateDetails.Request)}_Id, deets.{nameof(PSSCharacterCertificateDetails.Reason)}_Id, deets.{nameof(PSSCharacterCertificateDetails.ReasonValue)}, deets.{nameof(PSSCharacterCertificateDetails.Tribe)}_Id, deets.{nameof(PSSCharacterCertificateDetails.TribeValue)}, deets.{nameof(PSSCharacterCertificateDetails.PlaceOfBirth)}, deets.{nameof(PSSCharacterCertificateDetails.DateOfBirth)}, deets.{nameof(PSSCharacterCertificateDetails.PreviouslyConvicted)}, deets.{nameof(PSSCharacterCertificateDetails.PreviousConvictionHistory)}, deets.{nameof(PSSCharacterCertificateDetails.PassportNumber)}, deets.{nameof(PSSCharacterCertificateDetails.PlaceOfIssuance)}, deets.{nameof(PSSCharacterCertificateDetails.DateOfIssuance)}, deets.{nameof(PSSCharacterCertificateDetails.RefNumber)}, deets.{nameof(PSSCharacterCertificateDetails.IsBiometricEnrolled)}, deets.{nameof(PSSCharacterCertificateDetails.IsApplicantInvitedForCapture)}, deets.{nameof(PSSCharacterCertificateDetails.CaptureInvitationDate)}, deets.{nameof(PSSCharacterCertificateDetails.RequestType)}_Id, deets.{nameof(PSSCharacterCertificateDetails.StateOfOrigin)}_Id, deets.{nameof(PSSCharacterCertificateDetails.StateOfOriginValue)}, deets.{nameof(PSSCharacterCertificateDetails.BiometricCaptureDueDate)}, deets.{nameof(PSSCharacterCertificateDetails.CPCCRServiceNumber)}, deets.{nameof(PSSCharacterCertificateDetails.CPCCRName)}, deets.{nameof(PSSCharacterCertificateDetails.CPCCRAddedBy)}_Id, deets.{nameof(PSSCharacterCertificateDetails.DestinationCountry)}_Id, deets.{nameof(PSSCharacterCertificateDetails.DestinationCountryValue)}, deets.{nameof(PSSCharacterCertificateDetails.CPCCRRankName)}, deets.{nameof(PSSCharacterCertificateDetails.CPCCRRankCode)}, deets.{nameof(PSSCharacterCertificateDetails.CountryOfOrigin)}_Id, deets.{nameof(PSSCharacterCertificateDetails.CountryOfOriginValue)}, deets.{nameof(PSSCharacterCertificateDetails.CountryOfPassport)}_Id, deets.{nameof(PSSCharacterCertificateDetails.CountryOfPassportValue)}, deets.{nameof(PSSCharacterCertificateDetails.CreatedAtUtc)}, deets.{nameof(PSSCharacterCertificateDetails.UpdatedAtUtc)}) OUTPUT deets.{nameof(PSSCharacterCertificateDetails.Id)}, deets.{nameof(PSSCharacterCertificateDetails.Request)}_Id, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographBlob)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageBlob)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureBlob)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographOriginalFileName)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageOriginalFileName)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureOriginalFileName)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographFilePath)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageFilePath)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureFilePath)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographContentType)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageContentType)}, deets.{nameof(PSSCharacterCertificateDetailsBlobBase.SignatureContentType)}, deets.{nameof(PSSCharacterCertificateDetailsBlobLog.PSSCharacterCertificateDetailsBlob)}_Id, inserted.Id, deets.{nameof(PSSCharacterCertificateDetailsBlobBase)}_CreatedAt, deets.{nameof(PSSCharacterCertificateDetailsBlobBase)}_UpdatedAt INTO Parkway_CBS_Police_Core_{nameof(PSSCharacterCertificateDetailsBlobLog)} ({nameof(PSSCharacterCertificateDetailsBlobBase.PSSCharacterCertificateDetails)}_Id, {nameof(PSSCharacterCertificateDetails.Request)}_Id, {nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographBlob)}, {nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageBlob)}, {nameof(PSSCharacterCertificateDetailsBlobBase.SignatureBlob)}, {nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographOriginalFileName)}, {nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageOriginalFileName)}, {nameof(PSSCharacterCertificateDetailsBlobBase.SignatureOriginalFileName)}, {nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographFilePath)}, {nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageFilePath)}, {nameof(PSSCharacterCertificateDetailsBlobBase.SignatureFilePath)}, {nameof(PSSCharacterCertificateDetailsBlobBase.PassportPhotographContentType)}, {nameof(PSSCharacterCertificateDetailsBlobBase.InternationalPassportDataPageContentType)}, {nameof(PSSCharacterCertificateDetailsBlobBase.SignatureContentType)}, {nameof(PSSCharacterCertificateDetailsBlobLog.PSSCharacterCertificateDetailsBlob)}_Id, {nameof(PSSCharacterCertificateDetailsBlobLog.PSSCharacterCertificateDetailsLog)}_Id, {nameof(PSSCharacterCertificateDetailsBlobBase.CreatedAtUtc)}, {nameof(PSSCharacterCertificateDetailsBlobBase.UpdatedAtUtc)});";

                return queryString;               
            }
            catch (Exception exception)
            {
                RollBackAllTransactions();
                throw;
            }
        }

    }
}