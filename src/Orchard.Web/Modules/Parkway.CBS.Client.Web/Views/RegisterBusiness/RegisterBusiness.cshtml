@model Parkway.CBS.Core.HelperModels.RegisterBusinessObj

@{
    Layout.Title = "Register Business";

    Script.Require("CBS.Popper.Script").AtFoot();
    Script.Require("CBS.Bootstrap4.Script").AtFoot();
    Script.Require("CBS.Main.Script").AtFoot();
    Script.Require("CBS.Reg.Business.Script").AtFoot();
    Script.Require("CBS.State.LGA.Script").AtFoot();
    Style.Require("CBS.Bootstrap");
    Style.Require("CBS.Style.Main");
    Style.Require("CBS.Style.Pages");
}
<script>
    var states = @Html.Raw(Json.Encode(Model.StateLGAs));
    var stateLGAMap = new Map(states.map(obj => [obj.Id, obj.LGAs]));
</script>
@Html.Partial("Partials\\HeaderPartial", Model.HeaderObj)
 @using (Html.BeginFormAntiForgeryPost(Url.AppendModulePrefixToRouteName("C.RegisterBusiness"), FormMethod.Post, new { @id = "regBzform", @name = "regBzform" }))
 {
     @Html.AntiForgeryToken()
<div class="reg-business wrapper-payment">
    <div class="top-banner alt">
        <div class="banner-bottom">
            <h3>Business Registration Form</h3>
        </div>
    </div>
    <div class="container breadcrumbs">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href=@Href("~/")>Home</a></li>
            </ol>
        </nav>
    </div>
    <div class="container reg-content-container py-4">
        <div class="row mb-3" id="basicInfoContainer">
            <div class="container-fluid">
                <h5 style="font-weight:600">Basic Information</h5>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="bzName">Business Name<small class="required-symbol">*</small></label>
                    <input type="text" class="form-control" id="bzName" placeholder="Enter Business Name" name="RegisterBusinessModel.Name" value="@Model.RegisterBusinessModel.Name" required/>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.Name, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="compNumber">Company Phone Number<small class="required-symbol">*</small></label>
                    <input type="text" class="form-control" id="compNumber" placeholder="Enter Company Phone Number" name="RegisterBusinessModel.PhoneNumber" value="@Model.RegisterBusinessModel.PhoneNumber" required />
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.PhoneNumber, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="bzType">Type of Business<small class="required-symbol">*</small></label>
                    <select class="form-control" id="bzType" name="RegisterBusinessModel.BusinessType" required>
                        <option disabled>Select a business type</option>
                        @foreach (var item in Enum.GetValues(typeof(Parkway.CBS.Core.Models.Enums.BusinessType)).Cast<Parkway.CBS.Core.Models.Enums.BusinessType>().ToList())
                        {
                            <option value="@((int)item)">@item</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.BusinessType, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="rcNumber">RC Number<small class="required-symbol">*</small></label>
                    <input type="text" class="form-control" id="rcNumber" placeholder="Enter RC Number" name="RegisterBusinessModel.RCNumber" value="@Model.RegisterBusinessModel.RCNumber" required/>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.RCNumber, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="tin">Tax Identification Number</label>
                    <input type="text" class="form-control" id="tin" placeholder="Enter Tax Identification Number" name="RegisterBusinessModel.TIN" value="@Model.RegisterBusinessModel.TIN"/>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.TIN, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="compEmail">Company Email Address<small class="required-symbol">*</small></label>
                    <input type="text" class="form-control" id="compEmail" placeholder="Enter Company Email Address" name="RegisterBusinessModel.Email" value="@Model.RegisterBusinessModel.Email"/>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.Email, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="state">State<small class="required-symbol">*</small></label>
                    <select class="custom-select" name="RegisterBusinessModel.SelectedState" id="state" @(Model.HeaderObj.IsLoggedIn ? "disabled" : "required")>
                        <option selected disabled value="">Select State of your business</option>
                        @foreach (var item in Model.StateLGAs)
                        {
                            <option value="@item.Id" @(Model.RegisterBusinessModel.SelectedState == item.Id ? "selected" : "")>@item.Name</option>
                        }
                    </select>
                    @Html.ValidationMessage("RegisterCBSUserModel.SelectedState", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="lga">Local Government Area<small class="required-symbol">*</small></label>
                    <select class="custom-select" name="RegisterBusinessModel.SelectedStateLGA" id="lga" @(Model.HeaderObj.IsLoggedIn ? "disabled" : "required")>
                        <option selected disabled value="">Select LGA of your business.</option>
                        @if (Model.ListLGAs != null && Model.ListLGAs.Any())
                        {
                            foreach (var item in Model.ListLGAs)
                            {
                                <option value="@item.Id" @(Model.RegisterBusinessModel.SelectedStateLGA == item.Id ? "selected" : "")>@item.Name</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessage("RegisterCBSUserModel.SelectedStateLGA", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label for="offAddress">Office Address<small class="required-symbol">*</small></label>
                    <textarea class="form-control" id="offAddress" placeholder="Enter Office Address" name="RegisterBusinessModel.Address" required>@Model.RegisterBusinessModel.Address</textarea>
                    @Html.ValidationMessageFor(x => x.RegisterBusinessModel.Address, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                </div>
            </div>
        </div>

        <div class="row" id="contactInfoContainer">
            <div class="col-md-12">
                <h5 style="font-weight:600">Contact Information</h5>
                <div class="container-fluid px-0">
                    <div class="form-group">
                        <label for="contactName">Contact Name<small class="required-symbol">*</small></label>
                        <input type="text" class="form-control" id="contactName" placeholder="Enter Contact Name" name="RegisterBusinessModel.ContactPersonName" value="@Model.RegisterBusinessModel.ContactPersonName" required />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.ContactPersonName, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="form-group">
                        <label for="contactPhoneN">Contact Phone Number<small class="required-symbol">*</small></label>
                        <input type="text" class="form-control" id="contactPhoneN" placeholder="Enter Contact Phone Number" name="RegisterBusinessModel.ContactPersonPhoneNumber" value="@Model.RegisterBusinessModel.ContactPersonPhoneNumber" required />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.ContactPersonPhoneNumber, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="form-group">
                        <label for="contactEmail">Contact Email</label>
                        <input type="text" class="form-control" id="contactEmail" placeholder="Enter Contact Email" name="RegisterBusinessModel.ContactPersonEmail" value="@Model.RegisterBusinessModel.ContactPersonEmail" />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.ContactPersonEmail, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                </div>
            </div>
            </div>
        <div class="row" id="loginInfoContainer">
            <div class="col-md-12">
                <h5 style="font-weight:600">CBS Login Information</h5>
                <div class="container-fluid px-0">
                    <div class="form-group">
                        <label for="contactName">Username<small class="required-symbol">*</small></label>
                        <input type="text" class="form-control" id="UserName" placeholder="Enter Username Here" name="RegisterBusinessModel.UserName" value="@Model.RegisterBusinessModel.UserName" required />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.UserName, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="form-group">
                        <label for="contactPhoneN">Password<small class="required-symbol">*</small></label>
                        <input type="password" class="form-control" id="Password" placeholder="Enter Password Here" name="RegisterBusinessModel.Password" required />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.Password, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                    <div class="form-group">
                        <label for="contactEmail">Confirm Password<small class="required-symbol">*</small></label>
                        <input type="password" class="form-control" id="ConfirmPassword" placeholder="Re-enter Password Here" name="RegisterBusinessModel.ConfirmPassword" required />
                        @Html.ValidationMessageFor(x => x.RegisterBusinessModel.ConfirmPassword, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="row btn-row">
                <div class="col-md-6 py-1">
                    <button type="button" class="btn btn-block" id="backBtn">Back</button>
                </div>
                <div class="col-md-6 py-1">
                    <button type="submit" class="btn btn-block" id="submitBtn">Next</button>
                </div>
            </div>
        </div>
        
    </div>
</div>
 }
<div class="footer-top">

</div>
@Html.Partial("Partials\\FooterPartial")

