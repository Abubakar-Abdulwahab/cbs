@model Parkway.CBS.Core.HelperModels.ConfirmInvoiceVM

@{
    Layout.Title = "Confirm Invoice";

    Script.Require("CBS.Bootstrap4.Script").AtFoot();
    Script.Require("CBS.Main.Script").AtFoot();

    Style.Require("CBS.Bootstrap");
    Style.Require("CBS.Style.Main");
    Style.Require("CBS.Style.Pages");
    Script.Require("CBS.State.LGA.Script").AtFoot();
}

@Html.Partial("Partials\\HeaderPartial", Model.HeaderObj)
<script>
    var states = @Html.Raw(Json.Encode(Model.StateLGAs));
    var stateLGAMap = new Map(states.map(obj => [obj.Id, obj.LGAs]));
</script>

<div class="wrapper-payment">
    <div class="top-banner alt">
        <div class="banner-bottom">
            <h3>Confirm Invoice</h3>
        </div>
    </div>
    <div class="container breadcrumbs">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="@Url.AppendModulePrefixToRouteName("C.SelfAssessment")">Select Identity</a></li>
                <li class="breadcrumb-item active" aria-current="page">Confirm Invoice</li>
            </ol>
        </nav>
    </div>
    @Html.Partial("Partials\\FlashPartial", (string.IsNullOrEmpty(Model.ErrorMessage) ? "" : Model.ErrorMessage))

    @if (Model.HasMessage)
    {
        <div id="infoFlashMsg" class="container alert-msg" style="background-color:#d4edda;">
            <small class="message" style="color:#155724;"><small style="white-space: pre-wrap;">@Model.Message</small></small>
        </div>
    }
    <div class="content-payment">
        <div class="container form-container">
            @using (Html.BeginFormAntiForgeryPost(Url.AppendModulePrefixToRouteName("Confirm.Bill"), FormMethod.Post, new { @class = "main-form payment-form" }))
            {
                <h3 class="form-title">You are @Model.CategoryName, you are paying for @Model.RevenueHeadName bill (@Model.MDAName). Kindly confirm your invoice.</h3>

                <div class="row">
                    <div class="col-md-12">
                        <label for="" class="title">Payer ID</label>
                        <input type="email" class="form-control mb-4" value="@Model.TaxEntityViewModel.PayerId" disabled>
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Full Name<small style="color:red; font-weight:bolder">*</small></label>
                        <input type="text" class="form-control mb-4" value="@Model.TaxEntityViewModel.Recipient" disabled>
                    </div>

                    <div class="col-md-6">
                        <label for="" class="title">Email</label>
                        <input type="email" class="form-control mb-4" value="@Model.TaxEntityViewModel.Email" disabled>
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">Phone Number<small style="color:red; font-weight:bolder">*</small></label>
                        <input type="text" class="form-control mb-4" value="@Model.TaxEntityViewModel.PhoneNumber" disabled>
                    </div>
                    <div class="col-md-6">
                        <label for="" class="title">TIN</label>
                        <input type="text" class="form-control mb-4" value="@Model.TaxEntityViewModel.TaxPayerIdentificationNumber" disabled>
                    </div>
                    <div class="col-md-12  mb-4">
                        <label for="" class="title">Address<small style="color:red; font-weight:bolder">*</small></label>
                        <textarea class="form-control" disabled>@Model.TaxEntityViewModel.Address</textarea>
                        @Html.ValidationMessageFor(m => m.TaxEntityViewModel.Address, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                    </div>


                    @if (Model.Forms != null && Model.Forms.Any())
                    {
                        int counter = 0;
                        foreach (var item in Model.Forms)
                        {
                            item.FormIndex = counter++;
                            @Html.Partial("Partials\\Forms\\" + item.PartialName.Trim(), item, ViewData)
                        }
                    }
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="state">State<small style="color:red; font-weight:bolder">*</small></label>
                            <select class="custom-select" name="SelectedState" id="state">
                                <option selected disabled value="">Select a State</option>
                                @foreach (var item in Model.StateLGAs)
                                {
                                    <option value="@item.Id" @(Model.SelectedState == item.Id ? "selected" : "")>@item.Name</option>
                                }
                            </select>
                            <small class="form-text text-muted">Select State you want licence issued by.</small>
                            <div class="container-fluid no-padding validation-msg">@Html.ValidationMessage("SelectedState", new { @class = "tiny-caption", @style = "color:#ff0000" })</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="lga">Local Government Area<small style="color:red; font-weight:bolder">*</small></label>
                            <select class="custom-select" name="SelectedStateLGA" id="lga">
                                <option selected disabled value="">Select an LGA</option>
                                @if (Model.ListLGAs != null && Model.ListLGAs.Any())
                                {
                                    foreach (var item in Model.ListLGAs)
                                    {
                                        <option value="@item.Id" @(Model.SelectedStateLGA == item.Id ? "selected" : "")>@item.Name</option>
                                    }
                                }
                            </select>
                            <small class="form-text text-muted">Select LGA you want license issued by.</small>
                            <div class="container-fluid no-padding validation-msg">@Html.ValidationMessage("SelectedStateLGA", "This field is required", new { @class = "tiny-caption", @style = "color:#ff0000" })</div>
                        </div>
                    </div>
                    <div class="container-fluid px-0 mb-2">
                        <div class="col-md-6">
                            <label for="" class="title">Select Licence Year <small style="color:red; font-weight:bolder">*</small></label>
                            @{
                                int year = DateTime.Now.Year;
                            }
                            <select class="custom-select mb-1" id="year" name="Year" required>
                                <option selected disabled value="">Select a year</option>
                                @for (int i = 0; i <= 30; i++)
                                {
                                    <option value="@(year-i)">@(year - i)</option>
                                }
                            </select>
                            <small class="form-text text-muted">Select the year you want to pay for.</small>
                            <div class="container-fluid no-padding validation-msg">@Html.ValidationMessage("Year", "This field is required", new { @class = "tiny-caption", @style = "color:#ff0000" })</div>
                        </div>
                    </div>
                    @if (Model.IsVisibleSurcharge)
                    {
                        <div class="col-md-6  mb-4">
                            <p class="pay">Applicable Charge</p>
                        </div>
                        <div class="col-md-6  mb-4">
                            <div>
                                <p class="amount">₦@String.Format("{0:n2}", @Model.Surcharge)</p>
                            </div>
                        </div>
                    }
                    <div class="container-fluid px-0">
                        <div class="col-sm-12  mb-2">
                            <p class="pay" style="text-align:right">Amount to Pay</p>
                        </div>
                        @if (Model.CanEnterAmount)
                        {
                            <div class="col-sm-12  mb-4">
                                <div>
                                    <input type="text" name="SAmount" class="form-control mb-2 mr-sm-2" style="margin-left:0px" placeholder="Enter an amount" id="amountDue" value="@String.Format("{0:n2}", @Model.Amount)" required>
                                    @Html.ValidationMessageFor(m => m.SAmount, "", new { @class = "tiny-caption", @style = "color:#ff0000" })
                                    <small>Enter the amount you wish to pay</small>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-12  mb-4">
                                <div>
                                    <p class="amount">₦@String.Format("{0:n2}", @Model.Amount)</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <button type="submit" class="btn">Confirm Invoice</button>
            }
        </div>
    </div>
    <div class="footer-top">
    </div>
    @Html.Partial("Partials\\FooterPartial")
</div>