@model Parkway.CBS.Police.Admin.VM.PSSAdminUserReportVM

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{

    Layout.Title = T("Users Report").ToString();

    Style.Require("CBS.MDA.Style.BootStrap");
    Style.Require("Style.Datepicker");
    Style.Require("CBS.MDA.Style.Assesment");
    Style.Require("CBS.Report.Reset.Pagination");
    Script.Require("PSS.Admin.User.Report.Script").AtFoot();

}
<style>
    .textloader {
        position: absolute;
        left: 43%;
        top: 34%;
        color: #337ab7;
        display: none;
    }

    .profileloader {
        border: 6px solid #f3f3f3;
        border-radius: 50%;
        border-top: 6px solid rgb(20, 158, 196);
        width: 30px;
        height: 30px;
        -webkit-animation: spin 2s linear infinite; /* Safari */
        animation: spin 1s linear infinite;
        position: absolute;
        margin: auto;
        left: 41%;
        top: 33%;
        display: none;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }
</style>
<div class="zone zone-messages">
    <div class="message message-Error" id="errorFlash" style="display:none"></div>
</div>
@using (Html.BeginFormAntiForgeryPost())
{
    <div class="container-fluid">
        <div class="row">
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">Role</b>
                    <div class="form-group">
                        <select class="form-control" name="RoleTypeId" id="roleTypeId">
                            <option selected value="0">Select Role Type</option>
                            @if (Model.RoleTypes.Any())
                            {
                                foreach (var item in Model.RoleTypes)
                                {
                                    <option value="@item.Id" @(Model.RoleTypeId == item.Id ? "selected" : "")>@item.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">Formation Level</b>
                    <div class="form-group">
                        <select class="form-control" name="CommandCategoryId" id="commandCategory">
                            <option selected value="0">Select Formation Level</option>
                            @if (Model.CommandCategories.Any())
                            {
                                foreach (var item in Model.CommandCategories)
                                {
                                    <option value="@item.Id" @(Model.CommandCategoryId == item.Id ? "selected" : "")>@item.Name</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">Command</b>
                    <div class="form-group">
                        <span name="textloader" id="textloader" class="textloader">Loading..</span>
                        <select class="form-control" name="CommandId" id="commands">
                            <option selected value="0">Select Command/Formation</option>
                            @if (Model.Commands != null && Model.Commands.Any())
                            {
                                foreach (var item in Model.Commands)
                                {
                                    <option value="@item.Id" @(Model.CommandId == item.Id ? "selected" : "")>@item.Name</option>
                                }
                            }
                        </select>
                        <span id="commandLoader" class="profileloader" style="position:absolute;margin:auto;z-index:10"></span>
                        <div id="commandSearchError" style="color:red"></div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">User Status</b>
                    <select class="form-control" name="Status" id="Status">
                        <option selected disabled value="">Select Status</option>
                        @foreach (var statusType in Enum.GetValues(typeof(Parkway.CBS.Police.Core.Models.Enums.StatusFilter)).Cast<Parkway.CBS.Police.Core.Models.Enums.StatusFilter>())
                        {
                            <option value="@((int) statusType)" @(((int)statusType == Model.Status) ? "selected" : "")>@statusType</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">Username</b>
                    <div class="form-group">
                        <input type="text" placeholder="Enter username" class="form-control" value="@Model.Username" name="Username" />
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <b style="color:#e97d68;">&nbsp;</b>
                    <button class="btn btn-primary" style="width:100%" formaction="@Url.Action("AdminUserReport", "PSSAdminUserReport" )">Search</button>
                </div>
            </div>
        </div>
       
        <div class="row">
            <div class="col-xs-12">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>
                                    NAME
                                </th>
                                <th>
                                    USERNAME
                                </th>
                                <th>
                                    EMAIL
                                </th>
                                <th>
                                    PHONE NUMBER
                                </th>
                                <th>
                                    FORMATION
                                </th>
                                <th>
                                    ROLE
                                </th>
                                <th>
                                    COMMAND
                                </th>
                                <th>
                                    STATUS
                                </th>
                                <th>
                                    ACTIONS
                                </th>
                            </tr>
                        </thead>
                        <tbody style="background-color:#EEEEEE;">
                            @if (Model.AdminUsers != null && Model.AdminUsers.Count() > 0)
                            {
                                foreach (var item in Model.AdminUsers)
                                {
                                    <tr>
                                        <td>
                                            @item.Fullname
                                        </td>
                                        <td>
                                            @item.Username
                                        </td>
                                        <td>
                                            @item.Email
                                        </td>
                                        <td>
                                            @item.PhoneNumber
                                        </td>
                                        <td>
                                            @item.CommandCategoryName
                                        </td>
                                        <td>
                                            @item.RoleName
                                        </td>
                                        <td>
                                            @item.CommandName
                                        </td>
                                        <td>
                                            @(item.IsActive ? "Active": "Inactive")
                                        </td>

                                        <td>
                                            @Html.RouteLink("Edit", Parkway.CBS.Police.Admin.RouteName.UserManagement.PSSEditUser, new { adminUserId = item.Id }) |
                                            @Html.RouteLink(item.IsActive ? "Deactivate" : "Activate", Parkway.CBS.Police.Admin.RouteName.UserManagement.ToggleUserStatus, new { userPartRecordId = item.UserPartRecordId, status = item.IsActive ? false : true })
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9">No Records Found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <p class="summary">Total Users: @Model.TotalAdminUserRecord </p>
            </div>
        </div>


    </div>
}
@Display(Model.Pager)
