@using Parkway.CBS.Core.Models.Enums;
@model Parkway.CBS.Police.Admin.VM.CommandStatementReportVM

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{

    Layout.Title = T("Command Statement Report").ToString();

    Style.Require("CBS.MDA.Style.BootStrap");
    Style.Require("Style.Datepicker");
    Style.Require("CBS.Report.Reset.Pagination");


    Script.Require("CBS.Report.Script").AtFoot();
    Script.Require("CBS.MDA.BootstrapDatepicker.Script");
    Script.Require("CBS.MDA.Bootstrap.Script");
    Script.Require("CBS.MDA.BillingDatepicker.Script");
    Script.Require("CBS.MDA.AssessmentDatePicker.Script");
}
<style>
    .textloader {
        position: absolute;
        left: 43%;
        top: 34%;
        color: #337ab7;
        display: none;
    }

    table.items th, table.items td {
        border-bottom: 1px solid #eaeaea;
        border-spacing: 0px;
        display: table-cell;
        padding: 8px 12px;
        max-width: 100%;
        position: relative;
        word-break: break-all;
    }

    .extend-width {
        width: 99%;
    }

    .heading-text, label {
        color: #808080;
    }

    .profileloader {
        border: 6px solid #f3f3f3;
        border-radius: 50%;
        border-top: 6px solid rgb(20, 158, 196);
        width: 30px;
        height: 30px;
        -webkit-animation: spin 2s linear infinite; /* Safari */
        animation: spin 1s linear infinite;
        position: absolute;
        margin: auto;
        left: 41%;
        top: 33%;
        display: none;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }
</style>
<div class="zone zone-messages">
    <div class="message message-Error" id="errorFlash" style="display:none"></div>
</div>
@using (Html.BeginFormAntiForgeryPost())
{
<div class="container-fluid">
    <div class="row">
        <table class="items">
            <thead>
                <tr>
                    <th scope="col" id="titleHeader" colspan="3">COMMAND WALLET DETAILS</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td width="34">
                        <label for="CommandName">Name</label>
                        <p class="extend-width">@Model.WalletReportVM.CommandName</p>
                    </td>
                    <td width="33">
                        <label for="AccountNumber">Account Number</label>
                        <p class="extend-width">@Model.WalletReportVM.AccountNumber</p>
                    </td>
                    <td width="33">
                        <label for="Balance">Balance</label>
                        <p class="extend-width">@Model.WalletReportVM.Balance</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="row">
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">Transaction Date From</b>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </div>
                    <input type="text" placeholder="Click to show datepicker" class="form-control pickyDate" value="@Model.From" name="from" />
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">To</b>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </div>
                    <input type="text" placeholder="Click to show datepicker" class="form-control pickyDate" value="@Model.End" name="end" />
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">Value Date</b>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </div>
                    <input type="text" placeholder="Click to show datepicker" class="form-control pickyDate" value="@Model.ValueDate" name="ValueDate" />
                </div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">Transaction Reference</b>
                <div class="form-group">
                    <input type="text" placeholder="Enter Transaction reference" class="form-control" name="TransactionReference" value="@Model.TransactionReference" />
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">Transaction Type</b>
                <select id="TransactionType" name="TransactionType" class="form-control selectBox">
                    @Html.SelectOption(Model.TransactionType, Parkway.CBS.Core.Models.Enums.TransactionType.None, T(Parkway.CBS.Core.Models.Enums.TransactionType.None.ToDescription()).ToString())
                    @Html.SelectOption(Model.TransactionType, Parkway.CBS.Core.Models.Enums.TransactionType.Credit, T(Parkway.CBS.Core.Models.Enums.TransactionType.Credit.ToDescription()).ToString())
                    @Html.SelectOption(Model.TransactionType, Parkway.CBS.Core.Models.Enums.TransactionType.Debit, T(Parkway.CBS.Core.Models.Enums.TransactionType.Debit.ToDescription()).ToString())
                </select>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <b style="color:#e97d68;">&nbsp;</b>
                <button class="btn btn-primary" style="width:100%" formaction="@Url.Action("CommandStatementReport", "CommandStatementReport", new { code = ViewContext.RouteData.Values["code"].ToString() } )">Search</button>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-3"></div>
        <div class="col-md-3"></div>
        <div class="col-md-3">
            <div class="form-group" style="margin-top: 20px">
                <button class="btn btn-success" style="margin-left: 10px" title="Export to excel" formaction="@Url.Action("CommandStatementReportDownload", "CommandStatementReportExport", new { code = ViewContext.RouteData.Values["code"].ToString(),  format = Parkway.CBS.Core.Models.Enums.ExportFormat.Excel } )">
                    <i class=" fa fa-file-excel-o"></i>
                    <span>Excel</span>
                </button>
                <button class="btn btn-danger" style="margin-left: 10px" title="Export to PDF" formaction="@Url.Action("CommandStatementReportDownload", "CommandStatementReportExport", new {code = ViewContext.RouteData.Values["code"].ToString(), format = Parkway.CBS.Core.Models.Enums.ExportFormat.PDF })">
                    <i class=" pdf fa fa-file-pdf-o"></i>
                    <span>PDF</span>
                </button>
            </div>
        </div>
    </div>
    </div>
    <input name="Balance" value="@Model.Balance" hidden />

    <div class="row">
        <div class="col-xs-12">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                TRANSACTION REFERENCE
                            </th>
                            <th>
                                NARRATION
                            </th>
                            <th>
                                CREDIT
                            </th>
                            <th>
                                DEBIT
                            </th>
                            <th>
                                VALUE DATE
                            </th>
                            <th>
                                TRANSACTION DATE
                            </th>
                            <th>
                                AMOUNT(<span>&#8358;</span>)
                            </th>
                        </tr>
                    </thead>
                    <tbody style="background-color:#EEEEEE;">
                        @if (Model.CommandWalletStatements != null && Model.CommandWalletStatements.Count() > 0)
                        {
                            foreach (var item in Model.CommandWalletStatements)
                            {
                        <tr>
                            <td>
                                @item.TransactionReference
                            </td>
                            <td>
                                @item.Narration
                            </td>
                            <td>
                                @if (item.TransactionTypeId == (int)Parkway.CBS.Core.Models.Enums.TransactionType.Credit)
                                {
                                <small>Credit</small>
                                }
                            </td>
                            <td>
                                @if (item.TransactionTypeId == (int)Parkway.CBS.Core.Models.Enums.TransactionType.Debit)
                                {
                                <small>Debit</small>
                                }
                            </td>
                            <td>
                                @item.ValueDate.ToString("dd MMM yyyy HH:mm")
                            </td>
                            <td>
                                @item.TransactionDate.ToString("dd MMM yyyy HH:mm")
                            </td>
                            <td>
                                @String.Format("{0:n2}", item.Amount)
                            </td>
                        </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7">No Records Found</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    }
    @Display(Model.Pager)
