@model Parkway.CBS.Police.Core.VM.ChangeDeployedOfficerVM
@{
    Layout.Title = "Change Police Officer";

    Script.Require("CBS.State.LGA.Script").AtFoot();
    Script.Require("CBS.Admin.LGA.Command.Script").AtFoot();
    Script.Require("PSS.Admin.Change.Deployed.Officer.Script").AtFoot();
    Style.Require("CBS.MDA.Style.BootStrap");
    Style.Require("CBS.NPF.Main");
}

<style>
    table.items th, table.items td {
        border-bottom: 1px solid #eaeaea;
        border-spacing: 0px;
        display: table-cell;
        padding: 8px 12px;
        max-width: 100%;
        position: relative;
        word-break: break-word;
    }

    .profileloader {
        border: 6px solid #f3f3f3;
        border-radius: 50%;
        border-top: 6px solid rgb(20, 158, 196);
        width: 25px;
        height: 25px;
        -webkit-animation: spin 2s linear infinite; /* Safari */
        animation: spin 1s linear infinite;
        position: absolute;
        margin: auto;
        left: 48%;
        top: 50%;
        display: none;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    .extend-width {
        width: 99%;
    }

    .heading-text, label {
        color: #808080;
    }

    p {
        font-weight: 500;
    }

    .action-btns {
        display: flex;
        flex-flow: row nowrap;
        /*width: 100%;*/
    }

        /*.action-btns div {
            width: 50%;
        }*/

        .action-btns div:nth-child(1) {
            padding-right: 5px;
        }

        .action-btns div:nth-child(2) {
            padding-left: 5px;
        }

        .action-btns div button {
            width: 100%;
        }

    td {
        width: 100px;
        word-break: break-word;
    }
</style>
<script>
    var states = @Html.Raw(Json.Encode(Model.StateLGAs));
    var stateLGAMap = new Map(states.map(obj => [obj.Id, obj.LGAs]));
</script>
@using (Html.BeginFormAntiForgeryPost())
{
<div id="container">
    <table class="items">
        <thead>
            <tr>
                <th scope="col" id="titleHeader" colspan="4">CUSTOMER INFORMATION</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <label for="name" class="heading-text">Name</label>
                    <p class="extend-width">@Model.DeploymentInfo.CustomerName</p>
                </td>
                <td>
                    <label for="phoneNumber">Service Type</label>
                    <p class="extend-width">@Model.DeploymentInfo.ServiceTypeName</p>
                </td>
                <td>
                    <label for="email">Start Date</label>
                    <p class="extend-width">@Model.DeploymentInfo.StartDate.ToString("dd/MM/yyyy")</p>
                </td>
                <td>
                    <label for="email">End Date</label>
                    <p class="extend-width">@Model.DeploymentInfo.EndDate.ToString("dd/MM/yyyy")</p>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <label for="tin">Location</label>
                    <p class="extend-width">@Model.DeploymentInfo.Address</p>
                </td>
            </tr>
        </tbody>
    </table>

    <table class="items">
        <thead>
            <tr>
                <th scope="col" id="titleHeader" colspan="4">DETAILS OF CURRENT OFFICER</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <label>Name of Officer</label>
                    <p class="extend-width">@Model.DeploymentInfo.PoliceOfficerName</p>
                </td>
                <td>
                    <label>Batch ID</label>
                    <p class="extend-width">@Model.DeploymentInfo.BatchId</p>
                </td>
                <td>
                    <label>Rank</label>
                    <p class="extend-width">@Model.DeploymentInfo.OfficerRankName</p>
                </td>
                <td>
                    <label>Command</label>
                    <p class="extend-width">@Model.DeploymentInfo.CommandName</p>
                </td>
            </tr>
        </tbody>
    </table>
    @if (!Model.CanNotBeChanged)
    {
        <table class="items">
            <thead>
                <tr>
                    <th scope="col" id="titleHeader" colspan="7">RELIEVING POLICE OFFICER TO PROVIDE THE SERVICE</th>
                </tr>
            </thead>
            <tbody>

                <tr>
                    <td>
                        <label for="serviceNumber">AP/Force No.</label>
                        <input class="extend-width" type="text" name="serviceNumber" id="serviceNumber" style="height:20px" />
                        <span name="profileloader" id="profileloader" class="profileloader" style="position:absolute;margin:auto;z-index:10"></span>
                        <div id="serviceNumberError" style="color:red"></div>
                    </td>
                    <td>
                        <fieldset>
                            <button type="button" id="addOfficerBtn" style="position: absolute; top: 31px;">+ Add</button>
                        </fieldset>
                    </td>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <table class="items" id="relievingOfficerTable">
            <tr>
                <th>Rank</th>
                <th>Name</th>
                <th>Command</th>
                <th>Force Number</th>
                <th>IPPIS</th>
                <th>Account Number</th>
                <th></th>
            </tr>
        </table>
        <select id="officerRank" name="officerRank" class="extend-width" hidden required>
            <option value="0" disabled>--Select Rank--</option>
            @if (Model.PoliceRanks != null && Model.PoliceRanks.Any())
            {
                foreach (var item in Model.PoliceRanks)
                {
                    <option value="@item.Id" @(Model.DeploymentInfo.SelectedOfficerRank == item.Id ? "selected" : "")>@item.RankName</option>
                }
            }
        </select>
        <input type="text" name="deploymentLogId" id="deploymentLogId" value="@Model.deploymentLogId" hidden />
    }


</div>

    if (!Model.CanNotBeChanged)
    {
        <div class="action-btns">
            <div>
                <button type="submit">@T("Replace Officer")</button>
            </div>
            <div>
                <a class="button" href="@Url.Action("PSSDeployedOfficers", "PSSDeployedOfficersReport")">@T("Cancel")</a>
            </div>
        </div>
    }

}